<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="rs_CanNotInstallService" xml:space="preserve">
    <value>Can not install the service</value>
  </data>
  <data name="rs_CanNotReadServiceStatus" xml:space="preserve">
    <value>Can not read the service status</value>
  </data>
  <data name="rs_CanNotStartNotInstalledService" xml:space="preserve">
    <value>Can not start not installed service</value>
  </data>
  <data name="rs_CanNotStartService" xml:space="preserve">
    <value>Can not start the service</value>
  </data>
  <data name="rs_CanNotStopService" xml:space="preserve">
    <value>Can not stop the service</value>
  </data>
  <data name="rs_CanNotUninstallService" xml:space="preserve">
    <value>Can not uninstall the service</value>
  </data>
  <data name="rs_CantReadFbDbConfigSection" xml:space="preserve">
    <value>Can not read FbDb Section from the main configuration file.</value>
  </data>
  <data name="rs_CantReadGeneralConfigSection" xml:space="preserve">
    <value>Can not read General Section from the main configuration file.</value>
  </data>
  <data name="rs_CommansInfo" xml:space="preserve">
    <value>Current service may executed with such parameters:</value>
  </data>
  <data name="rs_ErrorOccurred" xml:space="preserve">
    <value>Error occurred</value>
  </data>
  <data name="rs_ErrorsInRepository" xml:space="preserve">
    <value>Found errors in the work with DB</value>
  </data>
  <data name="rs_ErrorsInRepositoryGetUnhandledDocumentsInfo" xml:space="preserve">
    <value>NeuronRepository Exception in GetUnhandledDocumentsInfo</value>
  </data>
  <data name="rs_ErrorWhileChangingServiceFailureActions" xml:space="preserve">
    <value>Error while changing the service failure actions</value>
  </data>
  <data name="rs_ErrorWhileInstallingService" xml:space="preserve">
    <value>Error while installing the service</value>
  </data>
  <data name="rs_ErrorWhileUninstallingService" xml:space="preserve">
    <value>Error while uninstalling the service</value>
  </data>
  <data name="rs_PressEnterToStop" xml:space="preserve">
    <value>Press Enter to stop</value>
  </data>
  <data name="rs_ServerErrorServiceWillBeStopped" xml:space="preserve">
    <value>The server has an enternal error. The service will be stopped</value>
  </data>
  <data name="rs_ServiceInstallationWasRolledBack" xml:space="preserve">
    <value>The service installation was rolled back</value>
  </data>
  <data name="rs_ServiceStartedAsConsoleApplication" xml:space="preserve">
    <value>The service is started as console application</value>
  </data>
  <data name="rs_ServiceTimeEndErrorValue" xml:space="preserve">
    <value>ServiceTimeEnd Error value</value>
  </data>
  <data name="rs_ServiceTimeStartErrorValue" xml:space="preserve">
    <value>ServiceTimeStart Error value</value>
  </data>
  <data name="rs_SomeProblemsWithConvertToPdf" xml:space="preserve">
    <value>Found some problems with converting Doc file to PDF.</value>
  </data>
  <data name="rs_SomeProblemsWithImageFile" xml:space="preserve">
    <value>Found some problems with the Image File.</value>
  </data>
  <data name="rs_SyncCoreStartWhileBusy" xml:space="preserve">
    <value>It's impossible to start main worker. 
The worker is still busy.</value>
  </data>
  <data name="rs_SyncCoreStartWithInternalError" xml:space="preserve">
    <value>It's impossible to start main worker. 
The InternalError is found.</value>
  </data>
  <data name="rs_SyncCoreWorkerDidntStop" xml:space="preserve">
    <value>SyncCore didn't stop main worker thread.</value>
  </data>
  <data name="rs_SyncNeuronDocumentsCanceled" xml:space="preserve">
    <value>Syncronization Process is canceled by user</value>
  </data>
  <data name="rs_SyncNeuronDocumentWasNotFilled" xml:space="preserve">
    <value>The document "{0}({1}) Id = {2}" was not filled with all data</value>
  </data>
  <data name="rs_SyncNeuronDocumentWasNotProcessed" xml:space="preserve">
    <value>The document "{0}({1}) Id = {2}" was not processed by the service</value>
  </data>
  <data name="rs_SyncNeuronDocumentGlobalError" xml:space="preserve">
    <value>The global error was found durring SyncProcess. Sync step is canceled.</value>
  </data>
  <data name="rs_AspNeuronDocumentProcessorError" xml:space="preserve">
    <value>An error was found in AspNeuronDocumentProcessor</value>
  </data>
  <data name="rs_EmailIsNotValid" xml:space="preserve">
    <value>Email is not valid</value>
  </data>
  <data name="rs_FileNameMustBeFilled" xml:space="preserve">
    <value>File name must be filled</value>
  </data>
  <data name="rs_PhoneNumberIsNotValid" xml:space="preserve">
    <value>Phone number is not valid</value>
  </data>
  <data name="rs_DocumantDoesntHaveAnyDeliveryInformation" xml:space="preserve">
    <value>The document doesn't have any delivery information</value>
  </data>
  <data name="rs_DocumentHasNoData" xml:space="preserve">
    <value>The document has no data for transfer</value>
  </data>
  <data name="rs_ValidationModelErrors" xml:space="preserve">
    <value>Validation model errors:</value>
  </data>
  <data name="rs_ValidationModelErrorsLog" xml:space="preserve">
    <value>The document "{0}({1}) Id = {2}" has errors:
{3}</value>
  </data>
  <data name="rs_AspNeuronDocumentPublisherError" xml:space="preserve">
    <value>An error was found  in AspNeuronDocumentProcessor during Publish process</value>
  </data>
  <data name="rs_DocumentsPublishingGlobalError" xml:space="preserve">
    <value>The global error was found durring Publish process.</value>
  </data>
  <data name="rs_DocumentsPublishingSuccess" xml:space="preserve">
    <value>Access keys were sended to users</value>
  </data>
  <data name="rs_ProcessDocumentInterrupted" xml:space="preserve">
    <value>The Process Document process is interrupted.</value>
  </data>
  <data name="rs_PublishDocumentsInterrupted" xml:space="preserve">
    <value>The Publish Documents process is interrupted.</value>
  </data>
  <data name="rs_WebApiLoginOrPassError" xml:space="preserve">
    <value>Can't connect to remote Neuron Service. The login or the pass is incorrect. Please, check the config file.</value>
  </data>
  <data name="rs_GetPublicCypherKeyError" xml:space="preserve">
    <value>An error was found in GetPublicCypherKeyError</value>
  </data>
  <data name="rs_GetPublicCypherKeyErrorErrorStatusCode" xml:space="preserve">
    <value>An error was found in GetPublicCypherKeyError. The Service returned Error status code</value>
  </data>
  <data name="rs_WebApiPublicCypherKeyError" xml:space="preserve">
    <value>Can't get a Public Cypher Key. Please, restart service.</value>
  </data>
</root>